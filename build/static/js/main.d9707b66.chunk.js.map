{"version":3,"sources":["components/Header.tsx","components/TaskList.tsx","components/AddTask.tsx","App.tsx","index.tsx"],"names":["Header","props","className","TaskList","tasks","deleteTask","toggleComplete","map","task","title","detail","disabled","completed","onClick","id","AddTask","addTask","useEffect","document","getElementById","style","display","useState","formState","setFormState","form","htmlFor","type","name","App","setTasks","data","JSON","parse","localStorage","console","log","Array","isArray","saveLocalStorage","param","removeItem","stringify","Math","floor","random","value","newTask","taskArray","alert","deleted","filter","toggled","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d9707b66.chunk.js","sourcesContent":["import React from 'react'\n\ninterface Props {\n\n}\n\nconst Header = (props: Props) => {\n\treturn (\n\t\t<header>\n\t\t\t<h1 className=\" p-8 font-bold text-4xl flex justify-center items-center\" >\n\t\t\t\tTo Do List\n\t\t\t</h1>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import { TiTick } from \"react-icons/ti\";\nimport { ImBin } from \"react-icons/im\";\n\ntype Task = {\n\tid: number;\n  title: string;\n\tdetail: string;\n\tcompleted: boolean;\n}\n\ninterface Props {\n\ttasks: Task[];\n\tdeleteTask: (id: number) => void;\n\ttoggleComplete: (id: number) => void\n}\n\nconst TaskList = ({ tasks, deleteTask, toggleComplete }: Props) => {\n\n\n\treturn (\n\t\t<ul className=\"task-list p-4 md:p-8 \">\n\t\t\t{tasks.map((task) => (\n\t\t\t\t<li key={task.id} className=\"transition-all duration-500 bg-white task shadow-xl rounded-lg p-6\">\n          <h2 className=\"mb-4 font-medium text-2xl\">{task.title}</h2>\n\t\t\t\t\t<h3>{task.detail}</h3>\n\t\t\t\t\t<div className=\"mt-1 flex items-center\">\n\t\t\t\t\t\t<button disabled={task.completed} className=\"m-0 bg-blue-300 p-1 m-1 rounded text-sm\" onClick={() => toggleComplete(task.id)} >{task.completed ? <><TiTick className=\"text-xl text-green-600\" /></>: \"Mark as complete\"}</button>\n\t\t\t\t\t\t<button className=\"bg-red-400 p-1 m-1 rounded text-sm\" onClick={() => deleteTask(task.id)} ><ImBin /></button>\n\t\t\t\t\t</div>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t)\n}\n\nexport default TaskList\n","import { useEffect, useState } from \"react\";\n\n\ninterface Props {\n\taddTask: () => void;\n}\n\nconst AddTask = ({ addTask }: Props) => {\n  useEffect(() => {\n    let form = document.getElementById(\"task-form\");\n    form!.style.display = \"none\"\n  },[])\n\n  const toggleForm = ():void=>{\n    let form = document.getElementById(\"task-form\");\n    if (form!.style.display === \"none\") {\n      form!.style.display = \"block\";\n      setFormState(true)\n    } else {\n      form!.style.display = \"none\";\n      setFormState(false)\n    }\n  }\n  const [formState, setFormState] = useState<boolean>(false);\n\n\treturn (\n\t\t<div className=\"flex flex-col justify-center items-center\">\n\t\t\t<button className=\"border p-2 bg-gray-100 rounded-xl\" onClick={toggleForm}>{formState? \"Close Form\": \"Open Form\"}</button>\n\t\t\t<form id=\"task-form\" className=\"mt-4 flex flex-col justify-center items-center\">\n\t\t\t\t<label htmlFor=\"newTitle\" className=\"flex flex-col items-center\">\n        Title:\n\t\t\t\t\t<input className=\"mb-4 outline-none border rounded-xl p-2 shadow-lg\" type=\"text\" name=\"newTitle\" id=\"newTitle\" />\n\t\t\t\t</label>\n\t\t\t\t<label htmlFor=\"newTask\" className=\"flex flex-col items-center\">\n          Details:\n\t\t\t\t\t<input className=\"mb-4 outline-none border rounded-xl p-2 shadow-lg\" type=\"text\" name=\"newTask\" id=\"newTask\" />\n\t\t\t\t</label>\n\t\t\t\t<button className=\"bg-green-500 p-4 rounded-xl justify-self-center\" onClick={addTask} type=\"button\">Add Task</button>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\nexport default AddTask\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskList from \"./components/TaskList\";\nimport AddTask from \"./components/AddTask\";\nimport \"./index.css\"\n\nfunction App() {\n  type Task = {\n    id: number;\n    title: string;\n    detail: string;\n    completed: boolean;\n   }\n\n  const [tasks, setTasks] = useState<Task[]>([])\n\n  // Fetch Data from localStorage\n  useEffect(() => {\n    try{\n      let data:Task[] | undefined = JSON.parse(localStorage[\"data\"]);\n      console.log(data);\n      if (Array.isArray(data)){\n        setTasks(\n        data\n        )\n    }\n    }\n    catch{\n      console.log(\"failed\")\n    }\n    \n    console.log(\"ran\")\n    \n  },[])\n\n\n  // save to localStorage\n  const saveLocalStorage=(param:Task[]):void=>{\n    localStorage.removeItem(\"data\");\n    localStorage[\"data\"] = JSON.stringify(param);\n  }\n\n  // Add tasks to tasks list\n\tconst addTask = (): void => {\n    let id = Math.floor(Math.random() * 10000) + 1 \n    let detail = (document.getElementById(\"newTask\") as HTMLInputElement).value;\n\t\tlet title = (document.getElementById(\"newTitle\") as HTMLInputElement).value;\n    if (title === \"\"){\n      alert(\"Title cannot be empty\")\n      return\n    }\n    (document.getElementById(\"newTitle\") as HTMLInputElement).value = \"\";\n    (document.getElementById(\"newTask\") as HTMLInputElement).value = \"\";\n    let newTask ={\n      id: id,\n      title: title,\n      detail: detail,\n      completed: false\n      }\n    let taskArray = [...tasks, newTask]\n    saveLocalStorage(taskArray)\n    setTasks(\n      taskArray\n    )\n\n\n\t}\n\tconst deleteTask = (id: number): void => {\n    let deleted = tasks.filter(task => task.id !== id);\n    saveLocalStorage(deleted)\n\t\tsetTasks(\n\t\t\tdeleted\n\t\t)\n\t}\n\tconst toggleComplete = (id: number)=> {\n    let toggled = tasks.map((task) => (\n        task.id === id ? { ...task, completed: !task.completed } : task\n      ));\n    saveLocalStorage(toggled)\n    setTasks(\n\t\t\ttoggled\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"font-mono\">\n\t\t\t<Header />\n\t\t\t<AddTask addTask={addTask} />\n\t\t\t<TaskList\n\t\t\t\tdeleteTask={deleteTask}\n\t\t\t\ttasks={tasks}\n\t\t\t\ttoggleComplete={toggleComplete}\n\t\t\t/>\n\t\t</div>\n\t); \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}